name: TestComplete Automation

on:
  workflow_dispatch: # Triggers manually or on specific events

env:
  TEST_NAME: Group=Group1
  EXECUTION_TYPE: TC
  TEST_RESULTS_DIR: ${{ github.workspace }}\test-results
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  TestComplete:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Latest .NET 8 LTS version

      - name: Install Visual Studio Test Platform
        run: |
          # Download and install the latest Visual Studio Test Platform
          $url = "https://aka.ms/vs/17/release/vstest.exe"
          $output = "C:\tools\vstest.exe"
          Invoke-WebRequest -Uri $url -OutFile $output

      - name: Install TestComplete Adapter
        run: |
          echo "Running TestComplete with executor: ${{ env.EXECUTION_TYPE }}"
          # Add commands to install and configure TestComplete here
          # Example: Install TestComplete using a command line installer or similar

      - name: Run TestComplete Tests
        run: |
          echo "Running tests with filter: ${{ env.TEST_NAME }}"
          & "C:\tools\vstest.exe" **\*.pjs --TestCaseFilter:${{ env.TEST_NAME }} || exit 1
        shell: pwsh

      - name: Clean Test Results Directory
        run: |
          if (Test-Path ${{ env.TEST_RESULTS_DIR }}) {
            Remove-Item -Recurse -Force ${{ env.TEST_RESULTS_DIR }}\*
          }
        shell: pwsh

      - name: Copy Test Results
        run: |
          New-Item -ItemType Directory -Path ${{ env.TEST_RESULTS_DIR }} -Force
          Copy-Item TestResults\*.mht ${{ env.TEST_RESULTS_DIR }} -Force
        shell: pwsh

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: Test Report
          path: ${{ env.TEST_RESULTS_DIR }}
